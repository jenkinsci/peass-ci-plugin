ExecutionConfiguration=Ausf√ºhrung
ExecutionConfigurationDescr=Konfiguriert die interne Ausf√ºhrung von Workloads

VersionSelection=Commitauswahl
VersionSelectionDescr=Konfiguriert wie der gemessene Commit ausgew√§hlt wird

OutputHandling=Ausgabenverwaltung
OutputHandlingDescr=Konfiguriert, wie die Ausgaben der Mess-VMs und von Peass selbst verarbeitet werden

RCAConfig=Ursachenanalyse
RCAConfigDescr=Konfiguriert die Ausf√ºhrung der Ursachenanalyse

TracingConfig=Tracing
TracingConfigDescr=onfiguriert wie Ausf√ºhrungstraces, sowohl f√ºr die Regressionstestselektion als auch f√ºr die Ursachenanalyse, ermittelt werden

TechnicalCompatibility=Technische Kompatibilit√§t
TechnicalCompatibilityDescr=Konfiguriert wie technische Kompatibilit√§t f√ºr konkrete Projekte und Umgebungseinrichtungen hergestellt wird

VMs=VMs
VMsDescr=Anzahl der VM-Ausf√ºhrungen pro Commit (Mehr VM-Ausf√ºhrungen machen es m√∂glich, kleinere Performance√§nderungen zu identifizieren)
iterations=Iterationen
iterationsDescr=Anzahl der Messiterationen innerhalb jeder VM (Mehr Messiterationen machen die Messergebnisse einer VM stabiler)
warmup=Warmup
warmupDescr=Anzahl der Warmupiterationen innerhalb jeder VM (Die Warmupiterationen sollten alle Iterationen umfassen, bis der station√§re Zustand erreicht ist; die Messwerte der Warmupiterationen werden gel√∂scht. Ein beendeter Warmup bedeutet u.a., dass die Just-in-Time-Compilation abgeschlossen ist.)
repetitions=Wiederholungen
repetitionsDescr=Anzahl der Wiederholungen, die innerhalb einer Iteration ausf√ºhrt wird
executeRCA=RCA ausf√ºhren
executeRCADescr=Definition, ob die Ursachenanalyse (Root-Cause-Analysis, RCA) ausgef√ºhrt werden soll

includes=Includes
includesDescr=Definition der Tests, die ausschlie√ülich einbezogen werden (andernfalls werden alle von surefire definierten Tests einbezogen). Matches werden gegen full-qualified classnames UND Methodennamen ausgef√ºhrt, wenn also org.TestA#method1 und org.TestA#method2 einbezogen werden sollen, sind org.TestA* oder org.TestA#method* m√∂gliche include-Spezifikationen. Wenn es sich um ein Multimodulprojekt handelt, f√ºgen Sie das module gefolgt von ¬ß hinzu, bspw. moduleA¬ßpackage.Clazz#method.   

excludes=Excludes
excludesDescr=Definition der Tests, die nicht einbezogen werden sollen (basieren auf den Includes-Tests oder allen Tests). Matches werden √§quivalent zum Verfahren bei Includes durchgef√ºhrt.

includeByRule=Include by Rule
includeByRuleDescr=Definiert die Rules, bei denen ein Test einbezogen werden soll (sofern definiert, werden nur die Tests ausgef√ºhrt, die eine der definierten Rules enthalten)

excludeByRule=Exclude by Rule
excludeByRuleDescr=Definitoin der Rules, bei denen Tests nicht einbezogen werden sollen (Sofern gesetzt, werden Tests, die die Rule enthalten, nicht ausgef√ºhrt, auch wenn sie eine der Rules aus includeByRule enthalten oder durch include einbezogen werden)

properties=Properties
propertiesDescr=Definiert die Properties, die an die Buildprozesse √ºbergeben werden sollen

testGoal=Test Goal / Task
testGoalDescr=Test-Goal (maven) / Task (gradle) das f√ºr die Ausf√ºhrung von Tests aufgerufen werden soll (default 'test')

cleanGoal=Clean Goal
cleanGoalDescr=Clean goal (maven) / task (gradle) das f√ºr die Reinigung der generierte Klasse aus dem vorherigen Build verwenden soll (default 'CleanTest')


pl=Projektliste
plDescr=Liste der Maven-Module, die gebaut werden sollen, in der √ºblichen Maven Notation die --pl √ºbergeben wird

updateSnapshotDependencies=Update Snapshot Dependencies
updateSnapshotDependenciesDescr=Ob Peass initial heruntergeladen werden soll, um alle Snapshot-Dependencies herunterzuladen

removeSnapshots=SNAPSHOT-Versionen entfernen
removeSnapshotsDescr=Wenn das aktiviert ist, werden alle -SNAPSHOT-Abh√§ngigkeiten durch regul√§re Versionen ersetzt (1.1-SNAPSHOT -> 1.1). Dadurch wird es m√∂glich, alte Versionen zu analysieren, bei denen die Abh√§ngigkeiten schon released wurden.

useAlternativeBuildfile=Nutze alternative Builddatei
useAlternativeBuildfileDescr=Ersetzt die Gradle Builddatei, d.h. wenn ein Module eine Datei alternative_build.gradle enth√§lt, wird die Original-Builddatei durch die alternative Datei ersetzt. Dies ist bspw. n√∂tig, wenn Zertifizierungsprozesse im finalen Prozess deaktiviert werden sollen.

excludeLog4jSlf4jImpl=Log4j-slf4j-impl entfernen
excludeLog4jSlf4jImplDescr=W√§hrend der Ausf√ºhrung werden KoPeMe- und Kieker-Abh√§ngigkeiten zu den Projektabh√§ngigkeiten hinzugef√ºgt; wenn diese aktiviert ist, wird log4j-slf4j-impl zu den exclusions hinzugef√ºgt (dies nicht zu den exklusions hinzuzuf√ºgen kann in einigen Spring-Konfigurationen Fehler verursachen)

excludeLog4jToSlf4j=Log4j-to-slf4j-impl entfernen
excludeLog4jToSlf4jDescr=Manchmal kollidieren existierende log4j-to-slf4j-Abh√§ngigkeiten mit der Kieker/KoPeMe-Abh√§ngigkeit. Diese Flags exkludiert diese (nur in Gradle).

timeout=Timeout
timeoutDescr=Timeout in Minuten, nach dem eine VM-Ausf√ºhrung abgebrochen wird

executeParallel=Parallel Ausf√ºhren
executeParallelDescr=Wenn dies aktiviert ist, wird jeweils eine VM f√ºr die zu vergleichenden Commits gestartet; andernfalls werden die Experimente sequentiell ausgef√ºhrt

significanceLevel=Typ-1-Fehler
significanceLevelDescr=Typ-1-Fehler der vom zweiseiten T-Test akzeptiert wird. Der Typ-1-Fehler entspricht 1 - Signifikanzniveau, d.h. ein Typ-1-Fehler von 0.01 entspricht einem Signifikanzniveau von 99%.

commitDiff=Commitunterschied
commitDiffDescr=Anzahl der Commits, zwischen denen der Unterschied bestimmt werden soll

generateCoverageSelection=Generiere abdeckungsbasierte selektierte Tests
generateCoverageSelectionDescr=Definiert ob Tests basiert auf Abdeckung selektiert werden sollen

generateTwiceExecutability=Generiere Zweifach-Ausf√ºhrbar Informationen
generateTwiceExecutabilityDescr=Erhebt die Information, ob ein Test zweimal in einer VM ausgef√ºhrt werden kann (durch zweifache Ausf√ºhrung und Pr√ºfung auf Fehler). Wenn dies aktiviert ist, werden nur die zweifach ausgef√ºhrten Tests gemessen (und potenzielle Fehler bei der Messung vermieden).

linearizeHistory=Commit-Verlauf linear verfolgen
linearizeHistoryDescr=Festgelegt, wie die Commit-Historie verfolgt werden soll (default: linear - die Deaktivierung f¸hrt zu einer nicht-linearen Verfolgung)

useSourceInstrumentation=Quelltextinstrumentierung nutzen
useSourceInstrumentationDescr=Wenn aktiviert, wird in einer Kopie des Quelltextes Monitoringquelltext f√ºr die Messung eingef√ºhrt; andernfalls wird AspectJ genutzt

useAggregation=Aggregation nutzen
useAggregationDescr=Wenn aktiviert, wird f√ºr jede Methode die Ausf√ºhrungszeit addiert und alle repetition Aufrufe werden zusammen verarbeitet; andernfalls erfolgt die Verarbeitung direkt

rcaStrategy=RCA-Strategie
rcaStrategyDescr=Definiert, in welcher Reihenfolge die Performance einzelner Knoten des Aufrufbaums gemessen wird

createDefaultConstructor=Default-Konstruktor erstellen
createDefaultConstructorDescr=Wenn aktiviert, werden Default-Konstruktoren explizit erstellt, sofern sie nicht vorhanden sind

redirectSubprocessOutputToFile=Umleiten der Subprozessausgaben in Dateien
redirectSubprocessOutputToFileDescr=Ob Subprozessausgaben in Dateien umgeleitet werden sollen (default: true). Das Deaktivieren des Umleitens f√ºhrt zu gro√üen Jenkinslogs.

useGC=GC aktivieren
useGCDescr=Wenn aktiviert, wird zwischen zwei Iterationen System.gc aufgerufen; dies kann die Abweichungen zwischen den Messwerten reduzieren, f√ºhrt aber in der Regel zu (teilweise enorm) erh√∂hter Ausf√ºhrungsdauer

measureJMH=JMH-Tests ausf√ºhren
measureJMHDescr=Wenn aktiviert, werden zur Performanzmessung JMH Benchmarks ausgef√ºhrt, anstelle von transformierten JUnit Tests.

redirectToNull=Ausgabe nach null Umleiten
redirectToNullDescr=Ob die Ausgabe ignoriert werden soll oder auf die interne Konsole geschrieben werden soll (Um Messergebnisverf√§lschungen zu vermeiden, wird standardm√§√üig auf null umgeleitet)

showStart=Iterationsstart anzeigen
showStartDescr=Ob der Beginn jeder Messiteration angezeigt werden soll (Standardm√§√üig deaktiviert, um Messverf√§lschungen zu vermeiden)

executeBeforeClassInMeasurement=@BeforeClass bei jeder Messunge ausf√ºhren
executeBeforeClassInMeasurementDescr=Definiert, ob @BeforeClass (und @AfterClass) in der Messung ausgef√ºhrt wird; wenn aktiviert, wird @BeforeClass vor jeder Mess-reptition ausgef√ºhrt, andernfalls nur einmal vor allen Iterationen.

clearMockitoCaches=L√∂schen der Mockito-Caches vor jeder Ausf√ºhrung..
clearMockitoCachesDescr=wenn aktiviert, werden die Mockito-Caches vor jeder Ausf√ºhrung geleert; dies ist nur m√∂glich, wenn executeBeforeClassInMeasurement aktiviert ist.

onlyMeasureWorkload=Nur Workload messen (kein @Before/@After)
onlyMeasureWorkloadDescr=Wenn aktiviert, werden @Before und @After nicht gemessen; dies ist nur m√∂glich wenn repetitions == 1

displayRTSLogs=Regressionstestselektionslogs anzeigen
displayRTSLogsDescr=Logs der Regressionstestselektion speichern und anzeigen (erh√∂ht Jenkins-internen Speicherverbrauch leicht)

displayLogs=Logs Anzeigen
displayLogsDescr=Logs einzelner VM-Ausf√ºhrungen speichern und anzeigen (erh√∂ht Jenkins-internen Speicherverbrauch)

displayRCALogs=Ursachenanalyselogs Anzeigen
displayRCALogsDescr=Logs einzelner VM-Ausf√ºhrungen zur Ursachenanalyse speichern und anzeigen (erh√∂ht Jenkins-internen Speicherverbrauch)

testExecutor=Spezifiziert TestExecutor
testExecutorDescr=Spezifiziert dem TestExecutor (ben√∂tigt f√ºr alternative Buildtools, d.h. nicht maven oder Gradle)

testTransformer=Spezifiziert TestTransformer
testTransformerDescr=Spezifiziert den TestTransformer (ben√∂tigt f√ºr alternative Workloaddefinitionen, bspw. JMH statt JUnit)

clazzFolders=Spezifiziert den Buildtool-Klassenordner
clazzFoldersDescr=Spezifiziert wo nach Klassen gesucht wird (default: src/main/java:src/java - der erste existierende Ordner wird im jeweiligen Modul genutzt)

testClazzFolders=Spezifiziert die Buildtool-Testklassenordner
testClazzFoldersDescr=Spezifiziert wo nach Testklassen gesucht wird (default: src/test/java:src/test - der erste existierende Ordner wird im jeweiligen Modul genutzt)

failOnRtsError=Build scheitern lassen, wenn RTS-Logs Fehler zeigen
failOnRtsErrorDescr=Zeigen die RTS-Logs f√ºr irgendeinen Test in aktueller oder Vorg√§ngercommit einen Fehler, schl√§gt der gesamte Build fehl

xmx=Heapgr√∂√üe
xmxDescr=Heapgr√∂√üe f√ºr Java (√ºbergeben via -Xmx, derzeitig nur unterst√ºtzt f√ºr Gradle)

kiekerWaitTime=Kieker Wait Time
kiekerWaitTimeDescr=Zeit, die KoPeMe wartet, bis das Schreiben der Kieker-Record-Queue beendet ist (default: 10)

kiekerQueueSize=Kieker Queue Size
kiekerQueueSizeDescr=Setzt die maximale Gr√∂√üe der Kieker-Record-Warteschlange (Speicher wird reserviert; Erh√∂hung ist sinnvoll, wenn Records geschluckt werden)

traceSizeInMb=Tracegr√∂√üe in MB
traceSizeInMbDescr=Maximale Gr√∂√üe, bis zu der Trace gelesen wird; andernfalls wird er ignoriert (und der jeweilige Test als nicht ausf√ºhrbar betrachtet)

importLogSizeInMb=Loggr√∂√üe in MB
importLogSizeInMbDescr=Maximale Gr√∂√üe von Logs, die in Jenkins importiert werden; Logs die gr√∂√üer sind werden nicht importiert, aber die Tests werden regul√§r als ausf√ºhrbar angesehen.

onlyOneCallRecording=Registrierung nur eines Aufrufs f√ºr die Regressionstestselektion
onlyOneCallRecordingDescr=Speichert nur einen Aufruf jeder Methode im Trace (nur erlaubt f√ºr Regressionstestselektion)

excludeForTracing=Exclude f√ºr das Tracing
excludeForTracingDescr=Liste der Methoden die beim Tracing nicht instrumentiert werden (bspw. weil sie zu oft aufgerufen werden). Die Methoden werden als Kieker-Pattern angegeben, bspw. * de.package.Clazz.methodA(..) f√ºr alle methodA in Clazz mit beliebigem R√ºckgabetyp.

statisticalTest=Statistischer Test
statisticalTestDescr=Statistischer Test, der genutzt wird, um Performanz√§nderungen zu ermitteln

gradleJavaPluginName=Gradle Java Pluginname
gradleJavaPluginNameDescr=Name des Gradle-Java-Plugins (falls ein anderer Name als 'Java' verwendet wird)

gradleSpringBootPluginName=Spring Boot Plugin Name
gradleSpringBootPluginNameDescr=Name des Gradle Spring Boot Plugins (falls ein anderer Name als der Standardname verwendet wird)

writeAsZip=Als ZIP Schreiben
writeAsZipDescr=Ob Traces und Trace-Diffs als ZIP-Dateien geschrieben werden sollen (reduziert den ben√∂tigten Festplattenspeicher, verlangsamt aber die Verarbeitung)


directlyMeasureKieker=Direkt mit Kieker Messen
directlyMeasureKiekerDescr=Aktiviert die Messung durch Kieker statt KoPeMe (ist nur n√ºtzlich wenn repetitions = 1 und wenn der Testrunner gro√üen Warmup erzeugt)

Android=Android Unterst√ºtzung
AndroidDescr=Optionen spezifisch f√ºr Androidprojekte

useAnbox=Benutze den Android Emulator
useAnboxDescr=Wenn Tests auf einem Android Emulator laufen. Nutze diese Option, wenn die zu messenden Tests in einem Android Projekt auf einem verbunden Emulator oder Ger√§t sind.

androidManifest=AndroidManifest.xml Datei
androidManifestDescr=Setzt den relativen Pfad zur AndroidManifest.xml Datei

androidCompileSdkVersion=√úberschreibt "compileSdkVersion"
androidCompileSdkVersionDescr=√úberschreibt "compileSdkVersion" in der Modulverzeichnis "build.gradle" Datei

androidMinSdkVersion=√úberschreibt "minSdkVersion"
androidMinSdkVersionDescr=√úberschreibt "minSdkVersion" in der Modulverzeichnis "build.gradle" Datei

androidTargetSdkVersion=√úberschreibt "targetSdkVersion"
androidTargetSdkVersionDescr=√úberschreibt "targetSdkVersion" in der Modulverzeichnis "build.gradle" Datei

androidGradleVersion=√úberschreibt Gradle version
androidGradleVersionDescr=√úberschreibt die vorhandene Gradle Version in der Projektverzeichnis "build.gradle" Datei 

androidGradleTasks=√úberschreibt Gradle install tasks
androidGradleTasksDescr=Liste von Gradle-Tasks mit denen die Tests kompiliert und auf dem Emulator installiert werden

androidTestPackageName=√úberschreibt den Test-Package Namen
androidTestPackageNameDescr=Benutzt dieses Test-Package f√ºr jede Testausf√ºhrung mit ADB